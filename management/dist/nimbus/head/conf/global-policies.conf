################################################################################
#
# This file is used for configuring global policies for creation requests.
#
################################################################################


# POLICY: maximum.group.size
#
# Never grant a request for more than 'N' instances at once.  If configuration
# is zero, negative, or missing, there will be no limit to request size.
# Note that the 'groupauthz' plugin allows you to have different values for
# this policy on a per person basis.

maximum.group.size=0


# POLICY: maximum.runtime.seconds
#
# Never grant anyone longer than this amount of running time duration per
# request.  Note that the 'groupauthz' plugin allows you to have different
# values for this policy on a per person basis (as well as a maximum aggregate
# usage policy).
#
# (This value 1209600 is two weeks)

maximum.runtime.seconds=2592000


# POLICY: default.runtime.seconds
#
# If no requested duration is supplied, what is the default to give (or request
# as the case may be).

default.runtime.seconds=2592000


# POLICY: termination.offset.seconds
#
# Instances run for a "running duration" but in-memory representations exist
# for them after the running time has expired.  This is useful, for example,
# when the VMs may be moving back to the client's repository directory and the
# client is informed when this is done.
#
# The "termination.offset" configuration is how long this period of time will
# last.  When it is over, everything about the instance will be destroyed
# (except for accounting records and logs).
#
# NOTE: the network address is currently held in reserve for the instance during
# this period and not released back to the pool of network addresses.
#
# 

termination.offset.seconds=120


# POLICY: allow.static.addresses
#
# If this is false, the clients may only use the Allocate networking method,
# not statically assigned or independent networking.  i.e., if it is false the
# remote client may not request specific IP addresses.
#
# This provides a convenient way to achieve this (very common) setup without
# needing to use an authorization callout.  With a callout it is possible to
# allow static IPs from just certain clients (based on DN or attribute) but it
# is not worth looking into that or worth the expense of making the callout
# per-use if one justs wants to limit all static IP use

allow.static.addresses=false


# POLICY: allow.other.schemes
#
# If 'true' this allows clients to use file URL schemes other than "cumulus://"
# or file://" for images.  It leaves it up to workspace-control or other special
# mechanisms (like "allowed.http.hosts" configuration below) to decide on
# the authorization question.

allow.other.schemes=false


# POLICY: allowed.http.hosts
#
# This is a list of hosts that the users are allowed to propagate images from 
# via http propagation. This should be a comma separated list.
#
# If http is desired, "allow.other.schemes" above must be enabled.

allowed.http.hosts=
