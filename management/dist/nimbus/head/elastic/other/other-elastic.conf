################################################################################
#
# The following configurations are more esoteric, mostly affecting display
# options in service responses.
#
################################################################################



# What CPU architecture to request from underlying resource manager?  This
# should match one of the available architectures or every request will be
# denied.

cpu.arch=x86


# What kind of VMM to request from underlying resource manager?  This
# should match one of the available VMM types or every request will be
# denied.

vmm.type=Xen
vmm.version=3


# What partition mount to request from RM for the base image.  In the future
# block mapping requests will be supported and this will be the default root
# file mapping if it is not supplied.

rootfile.mountas=hda


# Instance type names, defaults here are what Amazon uses:

ra.name.small=m1.small
ra.name.large=m1.large
ra.name.xlarge=m1.xlarge
ra.name.custom=m1.private


# Kernel names.  The cloud client and service can select kernels.  Will add
# support for this from the elastic interface soon.

kernels=default


# If VMs are created with another remote interface and the elastic interfaces
# are used to query, some 'unknown' mappings might occur.

# If VMs have a resource allocation that the elastic module is not configured
# to map, all-owned-instance queries still need to return a string for the
# instance type

ra.name.unknown=[unknown]


# If VMs have no network or networks that the elastic module is not configured
# to map, all-owned-instance queries still need to return a string for the
# network information.  If they have more than two real NICs, the extra ones
# will not be reported back through this interface.

unknown.pubnet=[unknown]
unknown.privnet=[unknown]


elastic.db=$NIMBUS_HOME/services/var/nimbus/elastic.db
