################################################################################
#
# Settings for the Nimbus elastic computing interface.
#
################################################################################

# There are three resource allocation types: small, large, and xlarge.  
# You will want to define both the memory and cpus available to these nodes.
# Note that it is still possible to oversubscribe CPUs, so be cautious with
# small memory large CPU allocations.

memory.small=2048
memory.large=2048
memory.xlarge=2048
memory.custom=2048

cpus.small=1
cpus.large=2
cpus.xlarge=4
cpus.custom=1

# There is a concept of "public" and "private" networks built into the elastic
# interface.  You need to map these to the real networks to request from the
# underlying resource manager (workspace service).
#
# They can be the same value which will trigger one real NIC request.  If they
# are different network names, two real NIC requests will be made.

# The following two settings are the default for all instances

net.public=public
net.private=private

# The following settings allow to override default setting per instance
# The defaults are used if left blank

network.public.small=
network.private.small=
network.public.large=
network.private.large=
network.public.xlarge=
network.private.xlarge=
network.public.custom=private
network.private.custom=private

# The default VMM to request from the underlying manager is x86+Xen3, see the
# "elastic/other/other-elastic.conf" to change this.


################################################################################
#
# Repository settings
#
################################################################################

# Is describe-images enabled?

repository.listing.enabled=true


# If so, what is the identity of the host? (would match cloud-client conf)
# Leaving blank like the exmaple means "use host based" authorization on the
# repository

repository.idauthz=
#repository.idauthz=/O=Grid/OU=GlobusTest/OU=simple-workspace-ca/CN=host/tp-vm1.ci.uchicago.edu



################################################################################
#
# SSH settings.
#
################################################################################

# In the past, the Elastic API only supported *generating* a key pair in the
# server side. Nimbus supported an optional avenue for uploading your own
# private key instead. Now there is also an ImportKeyPair operation which
# is part of the API. This should be used instead.
#
# If you rely on the legacy behavior of CreateKeyPair, it can be enabled below:
#
# Instead of sending the name of the key to create, clients can send the name
# of the key and the public key value.  Including a separation token (defined
# below) is necessary.
#
# You can enable/disable this behavior by setting true or false here:
ssh.pubkey.only=false


# If "ssh.pubkey.only=true" then this "ssh.split.token" setting is in effect.
# Requests without the token are rejected.

ssh.split.token=||


# If "ssh.pubkey.only=false" then the following settings are in effect.
# Type can be 'rsa' or 'dsa':

ssh.keygen.type=rsa


# Key size should be 1024,2048 etc:

ssh.keygen.size=2048

